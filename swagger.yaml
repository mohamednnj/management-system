openapi: 3.0.0
info:
  title: University Management System API
  version: 1.0.0
  description: API Documentation for University Management System
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /api/v1/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [student, professor, ta, staff]
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad Request

  /api/v1/auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Logged in successfully
        '401':
          description: Unauthorized

  /api/v1/posts:
    post:
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Post created successfully
        '403':
          description: Forbidden
    get:
      summary: Get all posts
      responses:
        '200':
          description: A list of posts

  /api/v1/exams:
    post:
      summary: Create an exam
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - courseId
                - questions
              properties:
                courseId:
                  type: string
                questions:
                  type: array
                  items:
                    type: object
                    properties:
                      questionText:
                        type: string
                      options:
                        type: array
                        items:
                          type: string
                      correctAnswer:
                        type: string
      responses:
        '201':
          description: Exam created

  /api/v1/exams/{id}/submit:
    post:
      summary: Submit answers to an exam
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Answers submitted

  /api/v1/students/{id}/gpa:
    get:
      summary: Get GPA for a student
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: GPA retrieved

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
